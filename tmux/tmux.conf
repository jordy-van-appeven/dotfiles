# Settings
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g mouse on
set -g history-limit 100000
set -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi

set-option -g status-position top

# Plugins
set -g @plugin 'tmux-plugins/tpm'

# Recover persistant tmux sessions after reboot/shutdown
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'

# Automatically store tmux sessions every 15 minutes
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# Theme

## Dracula
#set -g @plugin 'dracula/tmux'
#set -g @dracula-border-contrast false

# it can accept `session`, `smiley`, `window`, or any character.
#set -g @dracula-show-left-icon session 

# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, network, network-bandwidth, network-ping, weather, time
#set -g @dracula-plugins "git"

# the default is 5, it can accept any number
#set -g @dracula-refresh-rate 1 
#set -g @dracula-show-flags true

## Catppuccin
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-battery'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "directory session date_time"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_directory_text "#{pane_current_path}"

# Keybindings
unbind C-b
set -g prefix C-A

# Optimize 'escape-time'
set-option -sg escape-time 10

# Always keep continuous sequence of windows id's
set-option -g renumber-windows on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# Create separate keytable https://superuser.com/a/1265657 
bind -n C-w switch-client -T multiKeyBinding

# Splitting panes
unbind % 
bind v split-window -h

unbind '"' 
bind h split-window -v

bind -T multiKeyBinding V split-window -h -c "#{pane_current_path}"
bind -T multiKeyBinding S split-window -v -c "#{pane_current_path}"
bind -T multiKeyBinding v if-shell "$is_vim" "send-keys C-w v"  "split-window -h -c \"#{pane_current_path}\""
bind -T multiKeyBinding s if-shell "$is_vim" "send-keys C-w s"  "split-window -v -c \"#{pane_current_path}\""
bind -T multiKeyBinding q if-shell "$is_vim" "send-keys C-w q"  "kill-pane"
bind -T multiKeyBinding o if-shell "$is_vim" "send-keys C-w o"  ""

# Navigating panes
bind -T multiKeyBinding h if-shell "$is_vim" "send-keys C-w h"  "select-pane -L"
bind -T multiKeyBinding j if-shell "$is_vim" "send-keys C-w j"  "select-pane -D"
bind -T multiKeyBinding k if-shell "$is_vim" "send-keys C-w k"  "select-pane -U"
bind -T multiKeyBinding l if-shell "$is_vim" "send-keys C-w l"  "select-pane -R"
bind -T multiKeyBinding p if-shell "$is_vim" "send-keys C-w p"  "select-pane -l"

# Moving panes
bind -T multiKeyBinding H if-shell "$is_vim" "send-keys C-w H"  ""
bind -T multiKeyBinding J if-shell "$is_vim" "send-keys C-w J"  ""
bind -T multiKeyBinding K if-shell "$is_vim" "send-keys C-w K"  ""
bind -T multiKeyBinding L if-shell "$is_vim" "send-keys C-w L"  ""

# Zoomin panes
bind -T multiKeyBinding | if-shell "$is_vim" "send-keys C-w |"  ""
bind -T multiKeyBinding _ if-shell "$is_vim" "send-keys C-w _"  ""
bind -T multiKeyBinding = if-shell "$is_vim" "send-keys C-w ="  ""

# Resizing panes
bind -n C-h if-shell "$is_vim" "send-keys C-h" "resize-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "resize-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "resize-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "resize-pane -R"

# Copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"
unbind -T copy-mode-vi MouseDragEnd1Pane

# Re-source 'tmux.conf'
unbind r
bind r source-file ~/.tmux.conf

# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'
